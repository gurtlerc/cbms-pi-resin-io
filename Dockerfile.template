# base-image for node on any machine using a template variable,
# see more about dockerfile templates here:http://docs.resin.io/pages/deployment/docker-templates
# Note the node:slim image doesn't have node-gyp
FROM resin/%%RESIN_MACHINE_NAME%%-debian:latest

# use apt-get if you need to install dependencies,
# for instance if you need ALSA sound utils, just uncomment the lines below.
RUN apt-get update && apt-get install -yq \
    alsa-utils libasound2-dev nginx adduser libfontconfig && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Defines our working directory in container
WORKDIR /usr/src/app

# This will copy all files in our root to the working  directory in the container
COPY . ./

# Add the nginx configuration file
ADD nginx/default /etc/nginx/sites-available/default 

# Install cbmsstudio
RUN dpkg -i cbms/cbmsstudio_1.3.6.1135_armhf.deb
RUN rm -rf /var/cbms/.serial
RUN rm -rf /var/cbms/license.dat
RUN rm -rf /var/cbms/features.dat
ADD cbms/menu.json /var/cbms/web/nav/menu.json 
ADD cbms/config.ini /etc/cbms/config.ini
ADD cbms/app.sab /var/cbms/app.sab
ADD cbms/app.sab /var/cbms/default/app.sab
ADD cbms/kits.scode /var/cbms/kits.scode
ADD cbms/kits.scode /var/cbms/default/kits.scode

# Install Influxdb
RUN dpkg -i influxdb/influxdb_0.10.0+dfsg1-1_armhf.deb
RUN sed -i 's|/var/lib/influxdb|/data/influxdb|g' /etc/influxdb/influxdb.conf

# Install grafana
RUN dpkg -i grafana/grafana_2.6.0_armhf.deb
ADD grafana/grafana.ini /etc/grafana/grafana.ini
RUN systemctl enable grafana-server

# Startup script for running the software
CMD ["bash", "/usr/src/app/start.sh"]

# Enable systemd init system in container
ENV INITSYSTEM=on

